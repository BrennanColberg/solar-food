{"version":3,"sources":["pages/Splash.js","pages/About.js","pages/Technology.js","pages/Contact.js","pages/404.js","components/Logo.js","components/Header.js","components/Footer.js","serviceWorker.js","index.js","App.js"],"names":["_","to","href","className","Date","getFullYear","Boolean","window","location","hostname","match","ReactDOM","render","Header","exact","path","component","Splash","About","Technology","Contact","Error404","Footer","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+PAGe,WAAAA,GAAC,OACf,oCACC,yNAMA,2GAEQ,kBAAC,IAAD,CAAMC,GAAG,YAAT,kBCXK,WAAAD,GAAC,OAAI,wECAL,WAAAA,GAAC,OACf,6KCDc,WAAAA,GAAC,OACf,0CACa,IACZ,uBAAGE,KAAK,oCAAR,6BAAyE,IAF1E,SAGQ,IACP,uBAAGA,KAAK,mCAAR,4BAAuE,IAJxE,0CCDc,WAAAF,GAAC,OAAI,0DCEL,G,MAAA,SAAAA,GAAC,OACf,yBAAKG,UAAU,QACd,0BAAMA,UAAU,SAAhB,SACA,0BAAMA,UAAU,QAAhB,WCFa,WAAAH,GAAC,OACf,oCACC,kBAAC,IAAD,CAAMC,GAAG,KACR,kBAAC,EAAD,OAED,6BACC,kBAAC,IAAD,CAAMA,GAAG,UAAT,SACA,kBAAC,IAAD,CAAMA,GAAG,eAAT,cACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,cCTY,WAAAD,GAAC,OACf,oCACC,mCACQ,kBAAC,EAAD,MADR,KACkB,IAAII,MAAOC,cAD7B,OCMkBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,mBCQD,SAAAZ,GAAC,OACf,kBAAC,IAAD,KACC,oCACC,gCACC,kBAACa,EAAD,OAED,8BACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASC,UAAWE,IACtC,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,cAAcC,UAAWG,IAC3C,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,WAAWC,UAAWI,IACxC,kBAAC,IAAD,CAAOL,KAAK,IAAIC,UAAWK,MAG7B,gCACC,kBAACC,EAAD,WDxBY,MAASC,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f4d47c5e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default _ => (\n\t<>\n\t\t<h1>\n\t\t\twe design, create, and operate aquaponics systems for suburban backyards\n\t\t\tso that middle-class families can get more passive income and fresh,\n\t\t\tlocal, low-carbon-footprint food year-round\n\t\t</h1>\n\n\t\t<p>\n\t\t\tIf you are interested in an installation or investing in our company,\n\t\t\tplease <Link to=\"/contact\">contact us!</Link>\n\t\t</p>\n\t</>\n);\n","import React from \"react\";\n\nexport default _ => <h1>We're a company, or will be pretty soon</h1>;\n","import React from \"react\";\n\nexport default _ => (\n\t<h1>\n\t\tWe use aquaponics, which is a fancy way of saying \"plants floating in water,\n\t\tand fish in a tank, with a pump circulating water between them\"\n\t</h1>\n);\n","import React from \"react\";\n\nexport default _ => (\n\t<h1>\n\t\temail us at{\" \"}\n\t\t<a href=\"mailto:brennan.colberg@gmail.com\">brennan.colberg@gmail.com</a>{\" \"}\n\t\tand/or{\" \"}\n\t\t<a href=\"mailto:saurav.pahadia@gmail.com\">saurav.pahadia@gmail.com</a>{\" \"}\n\t\tbecause we haven't set up G Suite yet\n\t</h1>\n);\n","import React from \"react\";\n\nexport default _ => <h1>Error 404: Page Not Found</h1>;\n","import \"./Logo.scss\";\n\nimport React from \"react\";\n\nexport default _ => (\n\t<div className=\"logo\">\n\t\t<span className=\"solar\">Solar</span>\n\t\t<span className=\"food\">Food</span>\n\t</div>\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Logo from \"./Logo\";\n\nexport default _ => (\n\t<>\n\t\t<Link to=\"/\">\n\t\t\t<Logo />\n\t\t</Link>\n\t\t<nav>\n\t\t\t<Link to=\"/about\">About</Link>\n\t\t\t<Link to=\"/technology\">Technology</Link>\n\t\t\t<Link to=\"/contact\">Contact</Link>\n\t\t</nav>\n\t</>\n);\n","import React from \"react\";\n\nimport Logo from \"./Logo\";\n\nexport default _ => (\n\t<>\n\t\t<p>\n\t\t\t&copy; <Logo /> {new Date().getFullYear()}.\n\t\t</p>\n\t</>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import \"./App.scss\";\n\nimport React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Splash from \"./pages/Splash\";\nimport About from \"./pages/About\";\nimport Technology from \"./pages/Technology\";\nimport Contact from \"./pages/Contact\";\nimport Error404 from \"./pages/404\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nexport default _ => (\n\t<Router>\n\t\t<>\n\t\t\t<header>\n\t\t\t\t<Header />\n\t\t\t</header>\n\t\t\t<main>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={Splash} />\n\t\t\t\t\t<Route exact path=\"/about\" component={About} />\n\t\t\t\t\t<Route exact path=\"/technology\" component={Technology} />\n\t\t\t\t\t<Route exact path=\"/contact\" component={Contact} />\n\t\t\t\t\t<Route path=\"/\" component={Error404} />\n\t\t\t\t</Switch>\n\t\t\t</main>\n\t\t\t<footer>\n\t\t\t\t<Footer />\n\t\t\t</footer>\n\t\t</>\n\t</Router>\n);\n"],"sourceRoot":""}